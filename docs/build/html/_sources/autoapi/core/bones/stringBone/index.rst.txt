:mod:`core.bones.stringBone`
============================

.. py:module:: core.bones.stringBone


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   core.bones.stringBone.stringBone



.. class:: stringBone(caseSensitive=True, languages=None, defaultValue=None, *args, **kwargs)


   Bases: :class:`viur.core.bones.baseBone`

   .. attribute:: type
      :annotation: = str

      

   .. method:: generageSearchWidget(target, name='STRING BONE', mode='equals')
      :staticmethod:


   .. method:: singleValueSerialize(self, value, skel: SkeletonInstance, name: str, parentIndexed: bool)


   .. method:: singleValueUnserialize(self, value, skel: viur.core.skeleton.SkeletonInstance, name: str)


   .. method:: getEmptyValue(self)


   .. method:: singleValueFromClient(self, value, skel, name, origData)


   .. method:: buildDBFilter(self, name, skel, dbFilter, rawFilter, prefix=None)


   .. method:: buildDBSort(self, name, skel, dbFilter, rawFilter)


   .. method:: getSearchTags(self, skeltonValues, name)


   .. method:: getUniquePropertyIndexValues(self, skel, name: str) -> List[str]



