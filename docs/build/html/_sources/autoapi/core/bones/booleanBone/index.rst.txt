:mod:`core.bones.booleanBone`
=============================

.. py:module:: core.bones.booleanBone


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   core.bones.booleanBone.booleanBone



.. class:: booleanBone(defaultValue=False, *args, **kwargs)


   Bases: :class:`viur.core.bones.baseBone`

   .. attribute:: type
      :annotation: = bool

      

   .. attribute:: trueStrs
      

      

   .. method:: generageSearchWidget(target, name='BOOLEAN BONE')
      :staticmethod:


   .. method:: singleValueFromClient(self, value, skel, name, origData)


   .. method:: getEmptyValue(self)


   .. method:: isEmpty(self, rawValue: Any)


   .. method:: refresh(self, skel, boneName) -> None

      Inverse of serialize. Evaluates whats
      read from the datastore and populates
      this bone accordingly.

      :param name: The property-name this bone has in its Skeleton (not the description!)
      :type name: str
      :param expando: An instance of the dictionary-like db.Entity class
      :type expando: :class:`db.Entity`
      :returns: bool


   .. method:: buildDBFilter(self, name, skel, dbFilter, rawFilter, prefix=None)



